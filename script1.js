// –†–∞–∑–ø–æ–∑–Ω–∞–≤–∞–Ω–µ –Ω–∞ —Ç–µ–∫—Å—Ç –æ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ

document.getElementById('analyzeButton').addEventListener('click', function () {
    const imageInput = document.getElementById('imageInput');
    const extractedTextElement = document.getElementById('extractedText');

    if (imageInput.files.length === 0) {
        alert('–ú–æ–ª—è, –∫–∞—á–µ—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!');
        return;
    }

    const imageFile = imageInput.files[0];

    Tesseract.recognize(
        imageFile,
        'bul', // –ë—ä–ª–≥–∞—Ä—Å–∫–∏ –µ–∑–∏–∫
        {
            logger: (m) => console.log(m)
        }
    ).then(({ data: { text } }) => {
        extractedTextElement.textContent = text || '–ù–µ –±–µ—à–µ –Ω–∞–º–µ—Ä–µ–Ω —Ç–µ–∫—Å—Ç –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ—Ç–æ.';
        console.log('–†–∞–∑–ø–æ–∑–Ω–∞—Ç —Ç–µ–∫—Å—Ç:', text);
    }).catch(error => {
        console.error('–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Ä–∞–∑–ø–æ–∑–Ω–∞–≤–∞–Ω–µ:', error);
        alert('–ù–µ—É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–ø–æ–∑–Ω–∞–≤–∞–Ω–µ –Ω–∞ —Ç–µ–∫—Å—Ç–∞!');
    });
});

// –§—É–Ω–∫—Ü–∏—è –∑–∞ AI –æ–±–æ–±—â–µ–Ω–∏–µ
async function summarizeTextAI(text) {
    const apiKey = "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"; // üîÅ –ó–∞–º–µ–Ω–∏ —Å —Ç–≤–æ—è OpenAI API –∫–ª—é—á
    const url = "https://api.openai.com/v1/chat/completions";

    try {
        const response = await fetch(url, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Authorization": `Bearer ${apiKey}`
            },
            body: JSON.stringify({
                model: "gpt-4-turbo", // –ò–ª–∏ "gpt-3.5-turbo"
                messages: [
                    { role: "system", content: "–¢–∏ —Å–∏ AI, –∫–æ–π—Ç–æ –æ–±–æ–±—â–∞–≤–∞ —Ç–µ–∫—Å—Ç –ø–æ —è—Å–µ–Ω –∏ —Å–º–∏—Å–ª–µ–Ω –Ω–∞—á–∏–Ω." },
                    { role: "user", content: `–û–±–æ–±—â–∏ —Ç–æ–∑–∏ —Ç–µ–∫—Å—Ç:

${text}` }
                ],
                max_tokens: 300,
                temperature: 0.7
            })
        });

        const result = await response.json();
        return result.choices?.[0]?.message?.content || "–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –æ–±–æ–±—â–∞–≤–∞–Ω–µ—Ç–æ.";
    } catch (error) {
        console.error("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ AI –æ–±–æ–±—â–∞–≤–∞–Ω–µ—Ç–æ:", error);
        return "–ù–µ—É—Å–ø–µ—à–Ω–æ –æ–±–æ–±—â–µ–Ω–∏–µ.";
    }
}

// –û–±–æ–±—â–∞–≤–∞–Ω–µ –Ω–∞ —Ç–µ–∫—Å—Ç–∞

document.getElementById('summarizeButton').addEventListener('click', async function () {
    const extractedText = document.getElementById('extractedText').textContent;
    const summaryElement = document.getElementById('summaryText');

    if (!extractedText || extractedText.includes('–∫–∞—á–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ')) {
        alert('–ù—è–º–∞ —Ä–∞–∑–ø–æ–∑–Ω–∞—Ç —Ç–µ–∫—Å—Ç –∑–∞ –æ–±–æ–±—â–∞–≤–∞–Ω–µ!');
        return;
    }

    summaryElement.textContent = "–û–±–æ–±—â–∞–≤–∞–Ω–µ...";
    
    try {
        const summarizedText = await summarizeTextAI(extractedText);
        summaryElement.textContent = summarizedText;
    } catch (error) {
        summaryElement.textContent = "–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ AI –æ–±–æ–±—â–∞–≤–∞–Ω–µ—Ç–æ!";
    }
});

// –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–∞–Ω–µ –≤ –∞—É–¥–∏–æ —á—Ä–µ–∑ VoiceRSS

document.getElementById('convertToAudioButton').addEventListener('click', function () {
    const summaryText = document.getElementById('summaryText').textContent;
    const audioPlayer = document.getElementById('audioPlayer');

    if (!summaryText) {
        alert('–ù—è–º–∞ –æ–±–æ–±—â–µ–Ω —Ç–µ–∫—Å—Ç –∑–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–∞–Ω–µ –≤ –∞—É–¥–∏–æ!');
        return;
    }

    const apiKey = 'c7e7512d876444aa933c2a0a21f6ad8b'; // üîÅ –°–º–µ–Ω–∏ —Å —Ç–≤–æ—è API –∫–ª—é—á –∑–∞ VoiceRSS
    const encodedText = encodeURIComponent(summaryText);
    const ttsUrl = `https://api.voicerss.org/?key=${apiKey}&hl=bg-bg&src=${encodedText}&c=MP3&f=44khz_16bit_stereo`;

    audioPlayer.src = ttsUrl;
    audioPlayer.play().catch(error => {
        console.error('–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—É—Å–∫–∞–Ω–µ –Ω–∞ –∞—É–¥–∏–æ—Ç–æ:', error);
        alert('–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –∞—É–¥–∏–æ—Ç–æ. –û–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ!');
    });
});





